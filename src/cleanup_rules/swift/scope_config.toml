# Copyright (c) 2023 Uber Technologies, Inc.
# 
# <p>Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of the License at
# <p>http://www.apache.org/licenses/LICENSE-2.0
# 
# <p>Unless required by applicable law or agreed to in writing, software distributed under the
# License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing permissions and
# limitations under the License.


[[scopes]]
name = "Class"
[[scopes.rules]]
matcher = """
(class_declaration name: (_) @cls_name) @class
"""
generator = """(
(class_declaration name: (_) @name) @cs
(#eq? @name "@cls_name")              
)"""

[[scopes]]
name = "Function"
[[scopes.rules]]
matcher = """(
    [
        (function_declaration
            name: (simple_identifier) @m_function_with_param_name
            (parameter) @m_function_with_param_params
            body: (function_body)
        )
        (function_declaration
            name: (simple_identifier) @m_function_without_param_name
            .
            body: (function_body)
        )
        (function_declaration
            .
            (parameter) @m_constructor_with_param_params
            body: (function_body)
        )
        (function_declaration
            .
            body: (function_body) @m_constructor_without_param_body
        )
    ]@xdn
)"""
generator = """(
    [
        (((function_declaration
            name: (simple_identifier) @g_function_with_param_name
            (parameter) @g_function_with_param_params
            body: (function_body)))
        (#eq? @g_function_with_param_name "@m_function_with_param_name")
        (#eq? @g_function_with_param_params "@m_function_with_param_params"))
        (((function_declaration
            name: (simple_identifier) @g_function_without_param_name
            .
            body: (function_body)))
        (#eq? @g_function_without_param_name "@m_function_without_param_name"))
        (((function_declaration
            .
            (parameter) @g_constructor_with_param_params
            body: (function_body)))
        (#eq? @g_constructor_with_param_params "@m_constructor_with_param_params"))
        (((function_declaration
            .
            body: (function_body)@g_constructor_without_param_body))
        (#eq? @g_constructor_without_param_body "@m_constructor_without_param_body"))
    ]
)@qdn"""


[[scopes]]
name = "File"
[[scopes.rules]]
matcher = """
(source_file) @source_file
"""
generator = """(source_file) @sf"""
